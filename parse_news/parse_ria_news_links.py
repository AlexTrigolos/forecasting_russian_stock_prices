# -*- coding: utf-8 -*-
"""parse ria news links.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18ZPVCDJxBi8uNFB5yOwQ6469pzaK1bdc
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
from datetime import datetime, timedelta, date
import re
import os
import boto3
from botocore.exceptions import ClientError, NoCredentialsError
from traceback import format_exc
import json
import traceback
import time
import pytz

os.environ['AWS_ACCESS_KEY_ID'] = <access_key_id> 
os.environ['AWS_SECRET_ACCESS_KEY'] = <secret_access_key>


BUCKET = 'russian-news'

access_key = os.getenv('AWS_ACCESS_KEY_ID')
secret_key = os.getenv('AWS_SECRET_ACCESS_KEY')
endpoint_url = 'https://storage.yandexcloud.net'

# Создание клиента S3
s3_client = boto3.client('s3',
                         region_name='ru-central1',
                         aws_access_key_id=access_key,
                         aws_secret_access_key=secret_key,
                         endpoint_url=endpoint_url)


def upload_object_to_s3(date, body):
    key = f'ria/{date}.pkl'
    response = s3_client.put_object(Bucket=BUCKET, Key=key, Body=body)
    if response['ResponseMetadata']['HTTPStatusCode'] == 200:
        print(f"Успешно сохранен в {BUCKET}/{key}")
    else:
        print(f"Ошибка при сохранении: {response['ResponseMetadata']['HTTPStatusCode']}")


def fetch_ria_news(start_date = datetime.strptime('2001-10-16', '%Y-%m-%d').date(), end_date = datetime.now(pytz.timezone('Europe/Moscow')).date()):
    from datetime import date, timedelta
    import time

    if end_date > datetime.now(pytz.timezone('Europe/Moscow')).date():
        return print('Дата окончания в будущем')
    if start_date > end_date:
        return print('Дата начала больше окончания')

    delta = timedelta(days=1)
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"
    }

    find_date = end_date
    wait_time = 10
    while (find_date >= start_date):
        last_id = -1
        news_links = set()
        print(find_date)
        reg_date = re.sub('-', '', str(find_date))
        url = f'https://ria.ru/{reg_date}/'
        while True:
            response = requests.get(url, headers=headers)

            if response.status_code == 200:
                soup = BeautifulSoup(response.text, 'html.parser')
                divs = soup.find_all('div', class_='list-item__content')

                for div in divs:
                    links = div.find_all('a', href=True)
                    for link in links:
                        last_href = link['href']
                        if re.search(f'^https://ria.ru/{reg_date}/.+.*', last_href):
                            news_links.add(last_href)
                            href = last_href
                        else:
                            print(f'Плохие ссылки {last_href}')
            elif response.status_code == 429:
                print(f"По {url} получили {response.status_code} ждем секунду")
                time.sleep(wait_time)
                continue
            else:
                print(f"Ошибка при получении данных с {url}: {response.status_code}")
            next_date = soup.find_all('div', class_='list-item__info-item', attrs={'data-type': 'date'})
            if len(next_date) == 0:
                break
            date_time = re.sub(':', '', next_date[-1].text[-5:]) + '59'
            id = re.findall(r'(\d+)(?=\.html)', href)[-1]
            if id == last_id:
                break
            else:
                last_id = id
            url = f'https://ria.ru/services/{reg_date}/more.html?id={id}&date={reg_date}T{date_time}'
        print(f'Число сохраняемых ссылок: {len(news_links)}')
        try:
            upload_object_to_s3(find_date, json.dumps(list(news_links)))
        except ClientError as e:
            print(f"Произошла ошибка: {e.response['Error']['Message']}")
        except Exception as e:
            error_message = f"Неизвестная ошибка: {str(e)}"
            error_context = traceback.format_exc()
            print(f"{error_message}\nКонтекст ошибки:\n{error_context}")
        find_date -= delta

fetch_ria_news(end_date=datetime.strptime('2024-01-06', '%Y-%m-%d').date())
